// <auto-generated />
using System;
using ManagementVinarie.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ManagementVinarie.Migrations
{
    [DbContext(typeof(VinarieContext))]
    partial class VinarieContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("ManagementVinarie.Models.Servicii.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("DataNasterii")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Gen")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prenume")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ClientId");

                    b.ToTable("Clienti");
                });

            modelBuilder.Entity("ManagementVinarie.Models.Servicii.Pachet", b =>
                {
                    b.Property<int>("PachetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descriere")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<decimal>("DurataInOre")
                        .HasColumnType("TEXT");

                    b.Property<string>("PachetDenumire")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Pret")
                        .HasColumnType("TEXT");

                    b.Property<int>("SalaDegustareId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PachetId");

                    b.HasIndex("SalaDegustareId");

                    b.ToTable("Pachete");
                });

            modelBuilder.Entity("ManagementVinarie.Models.Servicii.Rezervare", b =>
                {
                    b.Property<int>("RezervareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataOraRezervare")
                        .HasColumnType("TEXT");

                    b.Property<int>("PachetId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RezervareId");

                    b.HasIndex("ClientId");

                    b.HasIndex("PachetId");

                    b.ToTable("Rezervari");
                });

            modelBuilder.Entity("ManagementVinarie.Models.Servicii.SalaDegustare", b =>
                {
                    b.Property<int>("SalaDegustareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Foto")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("SalaDegustareDenumire")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SalaDegustareDescriere")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.HasKey("SalaDegustareId");

                    b.ToTable("SaliDegustare");
                });

            modelBuilder.Entity("ManagementVinarie.Models.Vin.CantitateZahar", b =>
                {
                    b.Property<int>("CantitateZaharId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CantitateZaharDenumire")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CantitateZaharId");

                    b.ToTable("CantitatiZahar");
                });

            modelBuilder.Entity("ManagementVinarie.Models.Vin.ClasificareVin", b =>
                {
                    b.Property<int>("ClasificareVinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CantitateZaharId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CuloareId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaturitateStruguriId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TimpInvechereTimpInvechireId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ClasificareVinId");

                    b.HasIndex("CantitateZaharId");

                    b.HasIndex("CuloareId");

                    b.HasIndex("MaturitateStruguriId");

                    b.HasIndex("TimpInvechereTimpInvechireId");

                    b.ToTable("ClasificariVin");
                });

            modelBuilder.Entity("ManagementVinarie.Models.Vin.Culoare", b =>
                {
                    b.Property<int>("CuloareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CuloareDenumire")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CuloareId");

                    b.ToTable("Culori");
                });

            modelBuilder.Entity("ManagementVinarie.Models.Vin.MaturitateStruguri", b =>
                {
                    b.Property<int>("MaturitateStruguriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("MaturitateStruguriNume")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MaturitateStruguriId");

                    b.ToTable("MaturitateStruguri");
                });

            modelBuilder.Entity("ManagementVinarie.Models.Vin.TimpInvechire", b =>
                {
                    b.Property<int>("TimpInvechireId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("TimpInvechireDenumire")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TimpInvechireId");

                    b.ToTable("TimpuriInvechire");
                });

            modelBuilder.Entity("ManagementVinarie.Models.Vin.Vin", b =>
                {
                    b.Property<int>("VinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantitate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClasificareVinId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descriere")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("VinDenumire")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("VinId");

                    b.HasIndex("ClasificareVinId");

                    b.ToTable("Vinuri");
                });

            modelBuilder.Entity("ManagementVinarie.Models.Servicii.Pachet", b =>
                {
                    b.HasOne("ManagementVinarie.Models.Servicii.SalaDegustare", "SalaDegustare")
                        .WithMany()
                        .HasForeignKey("SalaDegustareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SalaDegustare");
                });

            modelBuilder.Entity("ManagementVinarie.Models.Servicii.Rezervare", b =>
                {
                    b.HasOne("ManagementVinarie.Models.Servicii.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManagementVinarie.Models.Servicii.Pachet", "Pachet")
                        .WithMany()
                        .HasForeignKey("PachetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Pachet");
                });

            modelBuilder.Entity("ManagementVinarie.Models.Vin.ClasificareVin", b =>
                {
                    b.HasOne("ManagementVinarie.Models.Vin.CantitateZahar", "CantitateZahar")
                        .WithMany()
                        .HasForeignKey("CantitateZaharId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManagementVinarie.Models.Vin.Culoare", "Culoare")
                        .WithMany()
                        .HasForeignKey("CuloareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManagementVinarie.Models.Vin.MaturitateStruguri", "MaturitateStruguri")
                        .WithMany()
                        .HasForeignKey("MaturitateStruguriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManagementVinarie.Models.Vin.TimpInvechire", "TimpInvechere")
                        .WithMany()
                        .HasForeignKey("TimpInvechereTimpInvechireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CantitateZahar");

                    b.Navigation("Culoare");

                    b.Navigation("MaturitateStruguri");

                    b.Navigation("TimpInvechere");
                });

            modelBuilder.Entity("ManagementVinarie.Models.Vin.Vin", b =>
                {
                    b.HasOne("ManagementVinarie.Models.Vin.ClasificareVin", "ClasificareVin")
                        .WithMany()
                        .HasForeignKey("ClasificareVinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClasificareVin");
                });
#pragma warning restore 612, 618
        }
    }
}
